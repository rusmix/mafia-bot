import { phoneKeyboard } from '@/helpers/keyboards'
import verifyPhoto from '@/helpers/verifyPhoto'
import { adminState, userState } from '@/middlewares/session'
import Context from '@/models/Context'
import { UserModel } from '@/models/User'

export default async function registration(ctx: Context) {
  const user = ctx.dbuser
  switch (ctx.session.state) {
    case userState.sendName:
      if (!ctx.message?.text) await ctx.reply('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–º—è!')
      user.name = ctx.message.text
      await user.save()
      ctx.session.state = userState.sendPhone

      if (ctx.session.isRegistred) {
        await ctx.reply('–ò–º—è —Å–æ—Ö—Ä–∞–Ω—ë–Ω–æ')
        ctx.session.state = userState.default
      } else
        await ctx.reply('–¢–µ–ø–µ—Ä—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞üëáüèº', {
          reply_markup: {
            keyboard: phoneKeyboard.build(),
            resize_keyboard: true,
            one_time_keyboard: true,
          },
        })

      break
    case userState.sendPhone:
      // eslint-disable-next-line no-case-declarations
      const message = ctx.message
      if (message?.contact) {
        console.log(message.contact.phone_number)
        user.phone = message.contact.phone_number
        ctx.session.state = userState.sendPhoto
        await user.save()
        if (ctx.session.isRegistred) {
          await ctx.reply('–¢–µ–ª–µ—Ñ–æ–Ω —Å–æ—Ö—Ä–∞–Ω—ë–Ω')
          ctx.session.state = userState.default
        } else await ctx.reply('–û—Å—Ç–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é!')
      } else {
        await ctx.reply('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëáüèº', {
          reply_markup: {
            keyboard: phoneKeyboard.build(),
            resize_keyboard: true,
            one_time_keyboard: true,
          },
        })
        return
      }
      break
    case userState.sendPhoto:
      // eslint-disable-next-line no-case-declarations
      const photo = verifyPhoto(ctx)
      console.log(photo)
      if (!photo)
        return await ctx.reply('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –≤ –≤–∏–¥–µ —Ñ–æ—Ç–æ, –∞ –Ω–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞')
      user.photoId = photo
      await user.save()
      ctx.session.state = userState.default
      if (ctx.session.isRegistred) {
        ctx.session.state = userState.default
        await ctx.reply('–§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æüî•')
      } else
        await ctx.reply(
          '–í—Å—ë, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ üî•\n–ù–∞–∂–º–∏ "–ê—Ñ–∏—à–∞", —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã'
        )
      break
  }
}
